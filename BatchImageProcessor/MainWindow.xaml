<Window x:Name="window" x:Class="BatchImageProcessor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:controls="clr-namespace:BatchImageProcessor.Controls"
        xmlns:model="clr-namespace:BatchImageProcessor.Model"
        xmlns:viewmodel="clr-namespace:BatchImageProcessor.ViewModel"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:cc="clr-namespace:System.Windows.Data;assembly=WindowsBase"
        Title="Batch Image Processor" Height="720" Width="1280" MinWidth="1024" MinHeight="650"
        UseLayoutRounding="True" SnapsToDevicePixels="True" Icon="Images/ImageRotator.ico"
        WindowStartupLocation="CenterScreen" Loaded="Window_Loaded"
        DataContext="{Binding VModel, Mode=OneWay, RelativeSource={RelativeSource Self}}">
	<Window.Resources>
		<viewmodel:FileCollectionView x:Key="ficv" Source="{Binding SelectedItem.Files, ElementName=treeView}" />
		<viewmodel:FolderCollectionView x:Key="focv" Source="{Binding Children}" />

		<!-- #region Converters -->

		<viewmodel:TypeConverter x:Key="typeConv" />
		<viewmodel:EnumBooleanConverter x:Key="enumConv" />
		<viewmodel:EnumVisibilityConverter x:Key="enumVis" />
		<viewmodel:EnumStringConverter x:Key="enumStr" />

		<!-- #endregion -->

		<!-- #region Effects -->
		<DropShadowEffect x:Key="tdse" Opacity="0.6" BlurRadius="6" ShadowDepth="0" RenderingBias="Quality" />

		<!-- #endregion -->

		<!-- #region Styles and Templates -->

		<!-- Simple Button Control Template -->
		<ControlTemplate x:Key="btn" TargetType="Button">
			<Border>
				<ContentPresenter />
			</Border>
		</ControlTemplate>

		<Style x:Key="tvs" TargetType="TreeViewItem">
			<Setter Property="BorderThickness" Value="1" />
			<Style.Triggers>
				<Trigger Property="IsSelected" Value="True">
					<Setter Property="BorderBrush" Value="#26A0DA" />
				</Trigger>
				<MultiTrigger>
					<MultiTrigger.Conditions>
						<Condition Property="IsSelected" Value="True" />
						<Condition Property="IsSelectionActive" Value="False" />
					</MultiTrigger.Conditions>
					<Setter Property="BorderBrush" Value="#DEDEDE" />
				</MultiTrigger>
			</Style.Triggers>
		</Style>

		<Style TargetType="{x:Type ListView}" BasedOn="{StaticResource {x:Type ListBox}}">
			<Setter Property="BorderBrush" Value="Black" />
			<Setter Property="BorderThickness" Value="0.5" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate>
						<Border Name="bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
						        Background="{TemplateBinding Background}" Margin="{TemplateBinding Margin}">
							<ScrollViewer Margin="{TemplateBinding Padding}">
								<controls:VirtualizingWrapPanel IsItemsHost="True"
								                                Width="{Binding ActualWidth,RelativeSource={RelativeSource AncestorType=ScrollContentPresenter},FallbackValue=600}"
								                                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
								                                ScrollViewer.VerticalScrollBarVisibility="Auto" />
							</ScrollViewer>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!-- Label Header Style (Global Override) -->
		<Style TargetType="Label">
			<Setter Property="FontSize" Value="14" />
			<Setter Property="Effect" Value="{DynamicResource tdse}" />
		</Style>

		<!-- Simple Button Style (Global Override) -->
		<Style TargetType="Button">
			<Setter Property="BorderThickness" Value="0" />
			<Setter Property="Background" Value="{x:Null}" />
			<Setter Property="Padding" Value="2" />
			<Setter Property="Margin" Value="3" />
			<Setter Property="Effect" Value="{DynamicResource tdse}" />
			<Setter Property="Template" Value="{DynamicResource btn}" />
			<Setter Property="Opacity" Value="0.8" />
			<Style.Triggers>
				<EventTrigger RoutedEvent="Control.MouseEnter">
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Duration="0:0:0.1" To="1" Storyboard.TargetProperty="Opacity" />
						</Storyboard>
					</BeginStoryboard>
				</EventTrigger>
				<EventTrigger RoutedEvent="Control.MouseLeave">
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Duration="0:0:0.1" To="0.75" Storyboard.TargetProperty="Opacity" />
						</Storyboard>
					</BeginStoryboard>
				</EventTrigger>
				<DataTrigger Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}" Value="false">
					<Setter Property="Opacity" Value="0.4" />
				</DataTrigger>
			</Style.Triggers>
		</Style>

		<Style TargetType="ListViewItem">
			<Setter Property="HorizontalContentAlignment" Value="Left" />
			<Setter Property="VerticalContentAlignment" Value="Center" />
		</Style>

		<!-- #endregion -->

		<!-- Thumbnail Fallback Image -->
		<BitmapImage x:Key="fallback" CacheOption="OnLoad" UriSource="Images/refresh.png" />

		<!-- File Context Menu -->
		<ContextMenu x:Key="imageCtxMenu">
			<MenuItem Header="Rotation Override">
				<MenuItem Header="Use Default Settings" IsCheckable="True"
				          IsChecked="{Binding Path=RotationOverride, Converter={StaticResource enumConv}, ConverterParameter=Default}">
					<MenuItem.Icon>
						<Image Stretch="None" StretchDirection="DownOnly" Source="Images/image-rotate.png" />
					</MenuItem.Icon>
				</MenuItem>
				<Separator />
				<MenuItem Header="Counter Clockwise" IsCheckable="True"
				          IsChecked="{Binding Path=RotationOverride, Converter={StaticResource enumConv}, ConverterParameter=CounterClockwise}">
					<MenuItem.Icon>
						<Image Stretch="None" StretchDirection="DownOnly" Source="Images/arrow-circle-ccwise.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="No Rotation" IsCheckable="True"
				          IsChecked="{Binding Path=RotationOverride, Converter={StaticResource enumConv}, ConverterParameter=None}">
					<MenuItem.Icon>
						<Image Stretch="None" StretchDirection="DownOnly" Source="Images/arrow-noturn.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="180&#173; Degrees" IsCheckable="True"
				          IsChecked="{Binding Path=RotationOverride, Converter={StaticResource enumConv}, ConverterParameter=UpsideDown}">
					<MenuItem.Icon>
						<Image Stretch="None" StretchDirection="DownOnly" Source="Images/arrow-circle-180.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Clockwise" IsCheckable="True"
				          IsChecked="{Binding Path=RotationOverride, Converter={StaticResource enumConv}, ConverterParameter=Clockwise}">
					<MenuItem.Icon>
						<Image Stretch="None" StretchDirection="DownOnly" Source="Images/arrow-circle-cwise.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Portrait" IsCheckable="True"
				          IsChecked="{Binding Path=RotationOverride, Converter={StaticResource enumConv}, ConverterParameter=Portrait}">
					<MenuItem.Icon>
						<Image Stretch="None" StretchDirection="DownOnly" Source="Images/image-vertical.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Landscape" IsCheckable="True"
				          IsChecked="{Binding Path=RotationOverride, Converter={StaticResource enumConv}, ConverterParameter=Landscape}">
					<MenuItem.Icon>
						<Image Stretch="None" StretchDirection="DownOnly" Source="Images/image.png" />
					</MenuItem.Icon>
				</MenuItem>
			</MenuItem>
		</ContextMenu>
	</Window.Resources>

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Name="Headers" Height="Auto" />
			<RowDefinition Name="Toolbars" Height="Auto" />
			<RowDefinition Name="Content" Height="*" />
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Name="Treeview" Width="200" MinWidth="200" MaxWidth="400" />
			<ColumnDefinition Name="Grid" Width="*" MinWidth="400" />
			<ColumnDefinition Name="Settings" Width="300" MinWidth="300" />
		</Grid.ColumnDefinitions>

		<!-- #region Left Column -->

		<Label Content="Folders" HorizontalAlignment="Center" />

		<!-- Left Toolbar -->
		<StackPanel Orientation="Horizontal" Grid.Row="1" Margin="15,0" HorizontalAlignment="Center">
			<Button x:Name="importImageBtn" ToolTip="Import Image(s)..." Cursor="Hand" Click="importImageBtn_Click">
				<Image Width="18" Height="18" Source="Images/image-import.png" Stretch="None" />
			</Button>
			<Line StrokeThickness="1" Margin="3" X1="0" X2="0" Y1="0"
			      Stroke="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"
			      Y2="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" />
			<Button x:Name="addFolderBtn" ToolTip="Add New Folder..." Cursor="Hand" Click="addFolderBtn_Click">
				<Image Width="18" Height="18" Source="Images/folder--plus.png" Stretch="None" />
			</Button>
			<Button x:Name="importFolderBtn" ToolTip="Import Folder(s)..." Cursor="Hand" Click="importFolderBtn_Click">
				<Image Width="18" Height="18" Source="Images/folder-import.png" Stretch="None" />
			</Button>
			<Line StrokeThickness="1" Margin="3" X1="0" X2="0" Y1="0"
			      Stroke="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"
			      Y2="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" />
			<Button x:Name="removeItemBtn" ToolTip="Remove Item" Cursor="Hand"
			        IsEnabled="{Binding SelectedItem.Removable, ElementName=treeView}">
				<Image Width="18" Height="18" Source="Images/cross.png" Stretch="None" />
			</Button>
		</StackPanel>

		<!-- Treeview File Explorer -->
		<TreeView x:Name="treeView" Grid.Row="2" ItemsSource="{Binding Folders}" BorderThickness="0"
		          VirtualizingPanel.IsVirtualizing="True">
			<TreeView.Resources>
				<HierarchicalDataTemplate DataType="{x:Type viewmodel:Folder}" ItemsSource="{Binding Files}">
					<StackPanel Orientation="Horizontal" Cursor="Hand">
						<StackPanel.ContextMenu>
							<ContextMenu>
								<MenuItem Header="Import Image(s)..." Click="importImageBtn_Click">
									<MenuItem.Icon>
										<Image Stretch="None" StretchDirection="DownOnly" Source="Images/image-import.png" />
									</MenuItem.Icon>
								</MenuItem>
								<Separator />
								<MenuItem Header="Add Folder..." Click="addFolderBtn_Click">
									<MenuItem.Icon>
										<Image Stretch="None" StretchDirection="DownOnly" Source="Images/folder--plus.png" />
									</MenuItem.Icon>
								</MenuItem>
								<MenuItem Header="Import Folder(s)..." Click="importFolderBtn_Click">
									<MenuItem.Icon>
										<Image Stretch="None" StretchDirection="DownOnly" Source="Images/folder-import.png" />
									</MenuItem.Icon>
								</MenuItem>
								<Separator />
								<MenuItem Header="Rename Folder" Click="RenameFolderMenuItem_Click" IsEnabled="{Binding Removable}">
									<MenuItem.Icon>
										<Image StretchDirection="DownOnly" Source="Images/ui-text-field.png" Stretch="None" />
									</MenuItem.Icon>
								</MenuItem>
								<MenuItem Header="Remove Folder" Click="RemoveFolderMenuItem_Click" IsEnabled="{Binding Removable}">
									<MenuItem.Icon>
										<Image StretchDirection="DownOnly" Source="Images/cross.png" Stretch="None" />
									</MenuItem.Icon>
								</MenuItem>
							</ContextMenu>
						</StackPanel.ContextMenu>
						<Image Source="Images/folder.png" />
						<TextBlock Text="{Binding Name}" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Margin="5,1,5,1"
						           ToolTip="{Binding Name}" />
					</StackPanel>
				</HierarchicalDataTemplate>
				<DataTemplate DataType="{x:Type model:File}">
					<StackPanel Orientation="Horizontal" MouseRightButtonUp="Grid_MouseRightButtonUp">
						<Image Source="Images/image.png" />
						<TextBlock Text="{Binding Name, BindsDirectlyToSource=True, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
						           TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Margin="5,1,5,1">
							<TextBlock.ToolTip>
								<StackPanel>
									<Image Source="{Binding Thumbnail.Source, FallbackValue={StaticResource fallback}, IsAsync=False}"
									       StretchDirection="DownOnly" Effect="{DynamicResource tdse}" />
									<TextBlock Grid.Row="1" Text="{Binding Path}" />
								</StackPanel>
							</TextBlock.ToolTip>
						</TextBlock>
					</StackPanel>
				</DataTemplate>
				<Style TargetType="TreeViewItem" BasedOn="{StaticResource tvs}">
					<Style.Triggers>
						<DataTrigger Value="{x:Type model:File}" Binding="{Binding Converter={StaticResource typeConv}, Mode=OneWay}">
							<Setter Property="Focusable" Value="False" />
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</TreeView.Resources>
		</TreeView>

		<!-- #endregion -->

		<!-- #region Middle Column -->

		<Label Grid.Column="1" Content="Files" HorizontalAlignment="Center" />

		<!-- Middle Toolbar -->
		<StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="1" Margin="15,0" HorizontalAlignment="Center">
			<Button x:Name="checkAllBtn" ToolTip="Enable Selected Items" Cursor="Hand" Click="checkAllBtn_Click">
				<Image Width="18" Height="18" Source="Images/ui-check-box.png" Stretch="None" />
			</Button>
			<Button x:Name="uncheckBtn" ToolTip="Disable Selected Items" Cursor="Hand" Click="uncheckBtn_Click">
				<Image Width="18" Height="18" Source="Images/ui-check-box-uncheck.png" Stretch="None" />
			</Button>
			<Line StrokeThickness="1" Margin="3" X1="0" X2="0" Y1="0"
			      Stroke="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"
			      Y2="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" />
			<Button x:Name="landRotBtn" ToolTip="Auto-Rotate to Landscape" Cursor="Hand" Click="landRotBtn_Click">
				<Image Width="18" Height="18" Source="Images/image.png" Stretch="None" />
			</Button>
			<Button x:Name="ccRotBtn" ToolTip="Rotate Counter Clockwise" Cursor="Hand" Click="ccRotBtn_Click">
				<Image Width="18" Height="18" Source="Images/arrow-circle-ccwise.png" Stretch="None" />
			</Button>
			<Button x:Name="noRotBtn" ToolTip="No Rotation" Cursor="Hand" Click="noRotBtn_Click">
				<Image Width="18" Height="18" Source="Images/arrow-noturn.png" Stretch="None" />
			</Button>
			<Button x:Name="defRotBtn" ToolTip="Reset to Default" Cursor="Hand" Click="defRotBtn_Click">
				<Image Width="18" Height="18" Source="Images/image-rotate--asterisk.png" Stretch="None" />
			</Button>
			<Button x:Name="upRotBtn" ToolTip="Rotate 180 Degrees" Cursor="Hand" Click="upRotBtn_Click">
				<Image Width="18" Height="18" Source="Images/arrow-circle-180.png" Stretch="None" />
			</Button>
			<Button x:Name="cRotBtn" ToolTip="Rotate Clockwise" Cursor="Hand" Click="cRotBtn_Click">
				<Image Width="18" Height="18" Source="Images/arrow-circle-cwise.png" Stretch="None" />
			</Button>
			<Button x:Name="portRotBtn" ToolTip="Auto Rotate to Portrait" Cursor="Hand" Click="portRotBtn_Click">
				<Image Width="18" Height="18" Source="Images/image-vertical.png" Stretch="None" />
			</Button>
			<Line StrokeThickness="1" Margin="3" X1="0" X2="0" Y1="0"
			      Stroke="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"
			      Y2="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" />
			<Button x:Name="selectAllBtn" ToolTip="Select All" Cursor="Hand" Click="selectAllBtn_Click">
				<Image Width="18" Height="18" Source="Images/selection-select.png" Stretch="None" />
			</Button>
			<Button x:Name="deselectBtn" ToolTip="Select None" Cursor="Hand" Click="deselectBtn_Click">
				<Image Width="18" Height="18" Source="Images/selection.png" Stretch="None" />
			</Button>
		</StackPanel>

		<!-- Grid Splitter -->
		<GridSplitter Grid.Row="2" Grid.Column="1" Width="3" ResizeDirection="Columns" HorizontalAlignment="Left"
		              IsTabStop="False">
			<GridSplitter.Background>
				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
					<GradientStop Color="Transparent" Offset="0" />
					<GradientStop Color="{DynamicResource {x:Static SystemColors.ControlLightColorKey}}" Offset="0.5" />
					<GradientStop Color="Transparent" Offset="1" />
				</LinearGradientBrush>
			</GridSplitter.Background>
		</GridSplitter>

		<!-- Item View -->
		<ListView Grid.Row="2" Grid.Column="1" x:Name="listView" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
		          ScrollViewer.VerticalScrollBarVisibility="Auto"
		          ItemsSource="{Binding Source={StaticResource ficv}}" Margin="3,0,0,0">
			<ListView.ItemTemplate>
				<DataTemplate DataType="{x:Type viewmodel:FileWrapper}">
					<Grid VerticalAlignment="Center" Margin="0,3,0,0" MouseRightButtonUp="Grid_MouseRightButtonUp">
						<Grid.ToolTip>
							<StackPanel>
								<Image HorizontalAlignment="Center" Source="{Binding Thumbnail.Source}" StretchDirection="DownOnly"
								       Effect="{DynamicResource tdse}" />
								<TextBlock Text="{Binding Path}" />
							</StackPanel>
						</Grid.ToolTip>
						<Grid.RowDefinitions>
							<RowDefinition Height="*" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<Image Grid.RowSpan="2"
						       Source="{Binding Thumbnail.Source, FallbackValue={StaticResource fallback}, IsAsync=False}"
						       StretchDirection="DownOnly" MaxWidth="128" Height="128" Margin="3" Effect="{DynamicResource tdse}" />
						<CheckBox Grid.Row="0" IsChecked="{Binding Selected}" VerticalAlignment="Top" Focusable="False" />
						<StackPanel Grid.Row="1" Orientation="Horizontal" FlowDirection="RightToLeft" Effect="{StaticResource tdse}">
							<Image Width="16" Height="16"
							       Visibility="{Binding Path=RotationOverride, Converter={StaticResource enumVis}, ConverterParameter=None}"
							       StretchDirection="DownOnly" Source="Images/arrow-noturn.png" ToolTip="Override: No Rotation" />
							<Image Width="16" Height="16"
							       Visibility="{Binding Path=RotationOverride, Converter={StaticResource enumVis}, ConverterParameter=Clockwise}"
							       StretchDirection="DownOnly" Source="Images/arrow-circle-cwise.png" ToolTip="Override: Rotate Clockwise" />
							<Image Width="16" Height="16"
							       Visibility="{Binding Path=RotationOverride, Converter={StaticResource enumVis}, ConverterParameter=UpsideDown}"
							       StretchDirection="DownOnly" Source="Images/arrow-circle-180.png" ToolTip="Override: Rotate 180&#176;" />
							<Image Width="16" Height="16"
							       Visibility="{Binding Path=RotationOverride, Converter={StaticResource enumVis}, ConverterParameter=CounterClockwise}"
							       StretchDirection="DownOnly" Source="Images/arrow-circle-ccwise.png" ToolTip="Override: Counter Clockwise" />
							<Image Width="16" Height="16"
							       Visibility="{Binding Path=RotationOverride, Converter={StaticResource enumVis}, ConverterParameter=Portrait}"
							       StretchDirection="DownOnly" Source="Images/image-vertical.png" ToolTip="Override: Portrait" />
							<Image Width="16" Height="16"
							       Visibility="{Binding Path=RotationOverride, Converter={StaticResource enumVis}, ConverterParameter=Landscape}"
							       StretchDirection="DownOnly" Source="Images/image.png" ToolTip="Override: Landscape" />
						</StackPanel>
						<TextBlock Grid.Row="2" TextWrapping="Wrap" TextTrimming="CharacterEllipsis" Text="{Binding Name}" MaxWidth="128"
						           MaxHeight="40" TextAlignment="Center" />
					</Grid>
				</DataTemplate>
			</ListView.ItemTemplate>
		</ListView>

		<!-- #endregion -->

		<!-- #region Right Column -->

		<Label Grid.Column="2" Content="Default Settings" HorizontalAlignment="Center" />

		<!-- Toolbar -->
		<StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="2" Margin="15,0" HorizontalAlignment="Center">
			<Button x:Name="gcBtn" ToolTip="Manually GC all Generations" Cursor="Hand" Click="gcBtn_Click">
				<Image Width="18" Height="18" Source="Images/bin.png" Stretch="None" StretchDirection="DownOnly" />
			</Button>
			<Button x:Name="aboutBtn" ToolTip="About" Cursor="Hand" Click="aboutBtn_Click">
				<Image Width="18" Height="18" Source="Images/information.png" Stretch="None" StretchDirection="DownOnly" />
			</Button>
		</StackPanel>

		<Grid Grid.Column="2" Grid.Row="2">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="*" />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>

			<!-- Option tabs -->
			<ListBox x:Name="OptionsBox" VerticalAlignment="Top" Height="Auto" BorderThickness="0" SelectedIndex="0"
			         SelectionChanged="ListBox_SelectionChanged">
				<ListBox.Resources>
					<Style TargetType="{x:Type CheckBox}">
						<Style.Triggers>
							<EventTrigger RoutedEvent="ToggleButton.Checked">
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Duration="0:0:0.1" To="1" Storyboard.TargetProperty="Content.Opacity" />
									</Storyboard>
								</BeginStoryboard>
							</EventTrigger>
							<EventTrigger RoutedEvent="ToggleButton.Unchecked">
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Duration="0:0:0.1" To="0.5" Storyboard.TargetProperty="Content.Opacity" />
									</Storyboard>
								</BeginStoryboard>
							</EventTrigger>
						</Style.Triggers>
					</Style>
				</ListBox.Resources>
				<ListBoxItem x:Name="RotateBox">
					<StackPanel Orientation="Horizontal">
						<CheckBox VerticalContentAlignment="Center" x:Name="rotChck" ToolTip="Enable/Disable Rotation"
						          IsChecked="{Binding EnableRotation}">
							<Border Opacity="0.5" Focusable="False" />
						</CheckBox>
						<StackPanel Orientation="Horizontal" Opacity="{Binding ElementName=rotChck, Path=Content.Opacity}">
							<Image Source="Images/image-rotate.png" />
							<Label Content="Rotate" />
						</StackPanel>
					</StackPanel>
				</ListBoxItem>
				<ListBoxItem x:Name="ResizeBox">
					<StackPanel Orientation="Horizontal">
						<CheckBox x:Name="resChck" VerticalContentAlignment="Center" ToolTip="Enable/Disable Resizing"
						          IsChecked="{Binding EnableResize}">
							<Border Opacity="0.5" Focusable="False" />
						</CheckBox>
						<StackPanel Orientation="Horizontal" Opacity="{Binding ElementName=resChck, Path=Content.Opacity}">
							<Image Source="Images/image-resize-actual.png" />
							<Label Content="Resize" />
						</StackPanel>
					</StackPanel>
				</ListBoxItem>
				<ListBoxItem x:Name="CropBox">
					<StackPanel Orientation="Horizontal">
						<CheckBox x:Name="crpChck" VerticalContentAlignment="Center" ToolTip="Enable/Disable Cropping"
						          IsChecked="{Binding EnableCrop}">
							<Border Opacity="0.5" Focusable="False" />
						</CheckBox>
						<StackPanel Orientation="Horizontal" Opacity="{Binding Content.Opacity, ElementName=crpChck}">
							<Image Source="Images/image-crop.png" />
							<Label Content="Crop" />
						</StackPanel>
					</StackPanel>
				</ListBoxItem>
				<ListBoxItem x:Name="WatermarkBox" IsEnabled="False">
					<StackPanel Orientation="Horizontal">
						<CheckBox x:Name="wtrChck" VerticalContentAlignment="Center" ToolTip="Enable/Disable Watermarking"
						          IsChecked="{Binding EnableWatermark}">
							<Border Opacity="0.5" Focusable="False" />
						</CheckBox>
						<StackPanel Orientation="Horizontal" Opacity="{Binding ElementName=wtrChck, Path=Content.Opacity}">
							<Image Source="Images/image-saturation.png" />
							<Label Content="Watermark" />
						</StackPanel>
					</StackPanel>
				</ListBoxItem>
				<ListBoxItem x:Name="OutputBox">
					<StackPanel Orientation="Horizontal" Margin="20,0">
						<Image Source="Images/image-export.png" />
						<Label Content="Output" />
					</StackPanel>
				</ListBoxItem>
			</ListBox>

			<!-- Separator -->
			<Border Grid.Row="1" Height="3">
				<Border.Background>
					<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
						<GradientStop Color="Transparent" Offset="0" />
						<GradientStop Color="{DynamicResource {x:Static SystemColors.ControlLightColorKey}}" Offset="0.5" />
						<GradientStop Color="Transparent" Offset="1" />
					</LinearGradientBrush>
				</Border.Background>
			</Border>

			<!-- #region Options Panes -->
			<StackPanel x:Name="SettingsPresenter" Grid.Row="2">
				<Grid x:Name="RotateSettings" Margin="5,0" Visibility="Visible">
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>
					<Label Content="Rotation Settings" HorizontalAlignment="Center" Margin="0,0,0,10" />
					<StackPanel Grid.Row="1" IsEnabled="{Binding EnableRotation}">
						<TextBlock Text="Rotate All Images:" FontWeight="Bold" />
						<RadioButton Margin="0,5,0,2"
						             IsChecked="{Binding Path=DefaultRotation, Converter={StaticResource enumConv}, ConverterParameter=None}">
							<StackPanel Orientation="Horizontal">
								<Image Source="Images/arrow-noturn.png" StretchDirection="DownOnly" />
								<TextBlock Text="No Rotation" Margin="5,0" />
							</StackPanel>
						</RadioButton>
						<RadioButton Margin="0,2"
						             IsChecked="{Binding Path=DefaultRotation, Converter={StaticResource enumConv}, ConverterParameter=Clockwise}">
							<StackPanel Orientation="Horizontal">
								<Image Source="Images/arrow-circle-cwise.png" StretchDirection="DownOnly" />
								<TextBlock Text="90&#176; Rotation" Margin="5,0" />
							</StackPanel>
						</RadioButton>
						<RadioButton Margin="0,2"
						             IsChecked="{Binding Path=DefaultRotation, Converter={StaticResource enumConv}, ConverterParameter=UpsideDown}">
							<StackPanel Orientation="Horizontal">
								<Image Source="Images/arrow-circle-180.png" StretchDirection="DownOnly" />
								<TextBlock Text="180&#176; Rotation" Margin="5,0" />
							</StackPanel>
						</RadioButton>
						<RadioButton Margin="0,2"
						             IsChecked="{Binding Path=DefaultRotation, Converter={StaticResource enumConv}, ConverterParameter=CounterClockwise}">
							<StackPanel Orientation="Horizontal">
								<Image Source="Images/arrow-circle-ccwise.png" StretchDirection="DownOnly" />
								<TextBlock Text="270&#176; Rotation" Margin="5,0" />
							</StackPanel>
						</RadioButton>
						<RadioButton Margin="0,2"
						             IsChecked="{Binding Path=DefaultRotation, Converter={StaticResource enumConv}, ConverterParameter=Portrait}">
							<StackPanel Orientation="Horizontal">
								<Image Source="Images/image-vertical.png" StretchDirection="DownOnly" />
								<TextBlock Text="Portrait" Margin="5,0" />
							</StackPanel>
						</RadioButton>
						<RadioButton Margin="0,2"
						             IsChecked="{Binding Path=DefaultRotation, Converter={StaticResource enumConv}, ConverterParameter=Landscape}">
							<StackPanel Orientation="Horizontal">
								<Image Source="Images/image.png" StretchDirection="DownOnly" />
								<TextBlock Text="Landscape" Margin="5,0" />
							</StackPanel>
						</RadioButton>

					</StackPanel>
				</Grid>
				<Grid x:Name="ResizeSettings" Visibility="Collapsed">
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>
					<Label Content="Resize Settings" HorizontalAlignment="Center" Margin="0,0,0,10" />
					<StackPanel Grid.Row="1" IsEnabled="{Binding EnableResize}">
						<TextBlock Text="Resize Mode:" FontWeight="Bold" />
						<RadioButton Margin="0,5,0,2"
						             IsChecked="{Binding Path=DefaultResizeMode, Converter={StaticResource enumConv}, ConverterParameter=Smaller}">
							<StackPanel Orientation="Horizontal">
								<Image Source="Images/image-resize-actual.png" StretchDirection="DownOnly" />
								<TextBlock Text="Smaller Than" Margin="5,0" />
							</StackPanel>
						</RadioButton>
						<RadioButton Margin="0,2"
						             IsChecked="{Binding Path=DefaultResizeMode, Converter={StaticResource enumConv}, ConverterParameter=Larger}">
							<StackPanel Orientation="Horizontal">
								<Image Source="Images/image-resize.png" StretchDirection="DownOnly" />
								<TextBlock Text="Larger Than" Margin="5,0" />
							</StackPanel>
						</RadioButton>
						<RadioButton Margin="0,2"
						             IsChecked="{Binding Path=DefaultResizeMode, Converter={StaticResource enumConv}, ConverterParameter=Exact}">
							<StackPanel Orientation="Horizontal">
								<Image Source="Images/image-resize-exact.png" StretchDirection="DownOnly" />
								<TextBlock Text="Exact Size" Margin="5,0" />
							</StackPanel>
						</RadioButton>
						<TextBlock Text="Smart Sizing:" FontWeight="Bold" Margin="0,10,0,0" />
						<CheckBox IsChecked="{Binding UseAspectRatio}"
						          ToolTip="Automatically swaps the width and height of the resize to match the longer and shorter dimension of the image.">
							<StackPanel Orientation="Horizontal">
								<Image Source="Images/image-rotate--asterisk.png" StretchDirection="DownOnly" />
								<TextBlock Text="Use Aspect Ratio" Margin="5,0" />
							</StackPanel>
						</CheckBox>
						<TextBlock Text="Size:" FontWeight="Bold" Margin="0,10,0,0" />
						<Grid Margin="15,0,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							<TextBlock Text="Width" Margin="5,3" VerticalAlignment="Center" />
							<xctk:IntegerUpDown Grid.Row="0" Grid.Column="1" Value="{Binding ResizeWidth}" Minimum="0" Margin="5,3"
							                    HorizontalAlignment="Left" MinWidth="100" />

							<TextBlock Grid.Row="1" Grid.Column="0" Text="Height" Margin="5,3" VerticalAlignment="Center" />
							<xctk:IntegerUpDown Grid.Row="1" Grid.Column="1" Value="{Binding ResizeHeight}" Minimum="0" Margin="5,3"
							                    HorizontalAlignment="Left" MinWidth="100" />
						</Grid>
					</StackPanel>
				</Grid>
				<Grid x:Name="CropSettings" Margin="5,0" Visibility="Collapsed">
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>
					<Label Content="Crop Settings" HorizontalAlignment="Center" Margin="0,0,0,10" />
					<StackPanel Grid.Row="1" IsEnabled="{Binding EnableCrop}">
						<TextBlock Text="Crop down to:" FontWeight="Bold" />
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							<TextBlock Text="Width" Margin="0,0,10,0" VerticalAlignment="Center" />
							<xctk:IntegerUpDown Grid.Row="0" Grid.Column="1" Width="100" HorizontalAlignment="Left" Margin="3" Minimum="1"
							                    Value="800" />
							<TextBlock Grid.Row="1" Grid.Column="0" Text="Height" Margin="0,0,10,0" VerticalAlignment="Center" />
							<xctk:IntegerUpDown Grid.Column="1" Grid.Row="1" Width="100" HorizontalAlignment="Left" Margin="3" Minimum="1"
							                    Value="600" />
						</Grid>
						<TextBlock Text="Crop alignment:" FontWeight="Bold" Margin="0,10,0,0" />
						<Grid HorizontalAlignment="Center">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							<Button x:Name="CropTopLeftBtn" Click="CropBtn_Click" Cursor="Hand">
								<Image StretchDirection="DownOnly" Source="Images/arrow-135.png" />
							</Button>
							<Button x:Name="CropTopCenterBtn" Grid.Row="0" Grid.Column="1" Cursor="Hand" Click="CropBtn_Click">
								<Image StretchDirection="DownOnly" Source="Images/arrow-090.png" />
							</Button>
							<Button x:Name="CropTopRightBtn" Grid.Row="0" Grid.Column="2" Cursor="Hand" Click="CropBtn_Click">
								<Image StretchDirection="DownOnly" Source="Images/arrow-045.png" />
							</Button>

							<Button x:Name="CropMiddleLeftBtn" Grid.Row="1" Grid.Column="0" Cursor="Hand" Click="CropBtn_Click">
								<Image StretchDirection="DownOnly" Source="Images/arrow-180.png" />
							</Button>
							<Button x:Name="CropMiddleCenterButton" Grid.Column="1" Grid.Row="1" Cursor="Hand" Click="CropBtn_Click">
								<Image StretchDirection="DownOnly" Source="Images/circle.png" />
							</Button>
							<Button x:Name="CropMiddleRightBtn" Grid.Column="2" Grid.Row="1" Cursor="Hand" Click="CropBtn_Click">
								<Image StretchDirection="DownOnly" Source="Images/arrow.png" />
							</Button>

							<Button x:Name="CropBottomLeftBtn" Grid.Row="2" Grid.Column="0" Cursor="Hand" Click="CropBtn_Click">
								<Image StretchDirection="DownOnly" Source="Images/arrow-225.png" />
							</Button>
							<Button x:Name="CropBottomCenterBtn" Grid.Column="1" Grid.Row="2" Cursor="Hand" Click="CropBtn_Click">
								<Image StretchDirection="DownOnly" Source="Images/arrow-270.png" />
							</Button>
							<Button x:Name="CropBottomRightBtn" Grid.Column="2" Grid.Row="2" Cursor="Hand" Click="CropBtn_Click">
								<Image StretchDirection="DownOnly" Source="Images/arrow-315.png" />
							</Button>
						</Grid>
						<TextBlock Text="{Binding DefaultCropAlignment, Converter={StaticResource enumStr}, FallbackValue={}No Binding}"
						           HorizontalAlignment="Center" />
					</StackPanel>
				</Grid>
				<Grid x:Name="WatermarkSettings" Visibility="Collapsed">
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>
					<Label Content="Watermark Settings" HorizontalAlignment="Center" Margin="0,0,0,10" />
					<StackPanel Grid.Row="1" IsEnabled="{Binding EnableWatermark}">
						<TextBlock Text="Type:" FontWeight="Bold" />
						<RadioButton Margin="0,5,0,2"
						             IsChecked="{Binding Path=DefaultWatermarkType, Converter={StaticResource enumConv}, ConverterParameter=Text}">
							<StackPanel Orientation="Horizontal">
								<Image Source="Images/edit.png" StretchDirection="DownOnly" />
								<TextBlock Text="Text" Margin="5,0" />
							</StackPanel>
						</RadioButton>
						<RadioButton Margin="0,2"
						             IsChecked="{Binding Path=DefaultWatermarkType, Converter={StaticResource enumConv}, ConverterParameter=Image}">
							<StackPanel Orientation="Horizontal">
								<Image Source="Images/image.png" StretchDirection="DownOnly" />
								<TextBlock Text="Image" Margin="5,0" />
							</StackPanel>
						</RadioButton>

						<StackPanel Margin="0,10,0,0"
						            Visibility="{Binding Path=DefaultWatermarkType, Converter={StaticResource enumVis}, ConverterParameter=Text}">
							<TextBlock Text="Text Options:" FontWeight="Bold" />
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>
								<TextBlock Text="Text:" Margin="0,0,10,0" VerticalAlignment="Center" />
								<TextBox Grid.Column="1" Margin="3" Text="{Binding WatermarkText}" />

								<TextBlock Text="Font:" Grid.Row="1" Margin="0,0,10,0" VerticalAlignment="Center" />
								<Button x:Name="watermarkFontBtn" Grid.Column="1" Grid.Row="1" Content="{Binding WatermarkFontString}"
								        Click="watermarkFontBtn_Click" Cursor="Hand" FlowDirection="RightToLeft" Margin="10,3"
								        HorizontalAlignment="Center">
									<Button.Style>
										<Style TargetType="Button">
											<Setter Property="Template" Value="{DynamicResource btn}" />
										</Style>
									</Button.Style>
								</Button>
							</Grid>
						</StackPanel>
						<StackPanel Margin="0,10,0,0"
						            Visibility="{Binding Path=DefaultWatermarkType, Converter={StaticResource enumVis}, ConverterParameter=Image}">
							<TextBlock Text="Image Options:" FontWeight="Bold" />
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>
								<TextBlock Text="Image File:" Margin="0,0,10,0" VerticalAlignment="Center" />
								<Button x:Name="watermarkImageBtn" ToolTip="{Binding WatermarkImagePath}" Grid.Column="1" Cursor="Hand"
								        Margin="10,3" Click="watermarkImageBtn_Click" VerticalAlignment="Center"
								        HorizontalContentAlignment="Center">
									<Button.Style>
										<Style TargetType="Button">
											<Setter Property="Template" Value="{DynamicResource btn}" />
										</Style>
									</Button.Style>
									<TextBlock TextTrimming="CharacterEllipsis" Text="{Binding WatermarkImagePath}" VerticalAlignment="Center"
									           Foreground="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}" TextDecorations="Underline"
									           HorizontalAlignment="Center" />
								</Button>
							</Grid>
							<CheckBox IsChecked="{Binding WatermarkGreyscale}">
								<StackPanel Orientation="Horizontal">
									<Image StretchDirection="DownOnly" Source="Images/image-greyscale.png" />
									<TextBlock Text="Convert to Greyscale" Margin="5,0" />
								</StackPanel>
							</CheckBox>
						</StackPanel>
						<StackPanel Margin="0,10,0,0">
							<TextBlock Text="Other Options:" FontWeight="Bold" />
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>


								<TextBlock Text="Opacity:" VerticalAlignment="Center" />
								<xctk:DoubleUpDown Grid.Column="1" FormatString="P" Value="{Binding WatermarkOpacity}" MinWidth="100"
								                   HorizontalAlignment="Left" Increment="0.1" Maximum="1" Minimum="0.01" Margin="3" />

								<Grid Grid.Row="1" Grid.ColumnSpan="2" HorizontalAlignment="Center">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>
									<Button x:Name="watermarkTlBtn" Click="WatermarkBtn_Click" Cursor="Hand">
										<Image StretchDirection="DownOnly" Source="Images/arrow-135.png" />
									</Button>
									<Button x:Name="watermarkTcBtn" Grid.Column="1" Cursor="Hand" Click="WatermarkBtn_Click">
										<Image StretchDirection="DownOnly" Source="Images/arrow-090.png" />
									</Button>
									<Button x:Name="watermarkTrBtn" Grid.Column="2" Cursor="Hand" Click="WatermarkBtn_Click">
										<Image StretchDirection="DownOnly" Source="Images/arrow-045.png" />
									</Button>

									<Button x:Name="watermarkMlBtn" Grid.Row="1" Cursor="Hand" Click="WatermarkBtn_Click">
										<Image StretchDirection="DownOnly" Source="Images/arrow-180.png" />
									</Button>
									<Button x:Name="watermarkMcButton" Grid.Column="1" Grid.Row="1" Cursor="Hand" Click="WatermarkBtn_Click">
										<Image StretchDirection="DownOnly" Source="Images/circle.png" />
									</Button>
									<Button x:Name="watermarkMrBtn" Grid.Column="2" Grid.Row="1" Cursor="Hand" Click="WatermarkBtn_Click">
										<Image StretchDirection="DownOnly" Source="Images/arrow.png" />
									</Button>

									<Button x:Name="watermarkBlBtn" Grid.Row="2" Cursor="Hand" Click="WatermarkBtn_Click">
										<Image StretchDirection="DownOnly" Source="Images/arrow-225.png" />
									</Button>
									<Button x:Name="watermarkBcBtn" Grid.Column="1" Grid.Row="2" Cursor="Hand" Click="WatermarkBtn_Click">
										<Image StretchDirection="DownOnly" Source="Images/arrow-270.png" />
									</Button>
									<Button x:Name="watermarkBrBtn" Grid.Column="2" Grid.Row="2" Cursor="Hand" Click="WatermarkBtn_Click">
										<Image StretchDirection="DownOnly" Source="Images/arrow-315.png" />
									</Button>
								</Grid>
								<TextBlock Grid.Row="2" Grid.ColumnSpan="2"
								           Text="{Binding WatermarkAlignment, Converter={StaticResource enumStr}, FallbackValue={}No Binding}"
								           HorizontalAlignment="Center" />
							</Grid>
						</StackPanel>
					</StackPanel>
				</Grid>
				<Grid x:Name="OutputSettings" Visibility="Collapsed">
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>
					<Label Content="Output Settings" HorizontalAlignment="Center" Margin="0,0,0,10" />
					<StackPanel Grid.Row="1">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<TextBlock Text="Output Location:" Margin="0,0,10,0" VerticalAlignment="Center" />
							<Button x:Name="outputBtn" ToolTip="{Binding WatermarkImagePath}" Grid.Column="1" Cursor="Hand" Margin="10,3"
							        VerticalAlignment="Center" HorizontalContentAlignment="Center" Click="outputBtn_Click">
								<Button.Style>
									<Style TargetType="Button">
										<Setter Property="Template" Value="{DynamicResource btn}" />
									</Style>
								</Button.Style>
								<TextBlock TextTrimming="CharacterEllipsis" Text="{Binding OutputPath}" VerticalAlignment="Center"
								           Foreground="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}" TextDecorations="Underline"
								           HorizontalAlignment="Center" />
							</Button>
						</Grid>
						<TextBlock Text="File Naming Mode:" FontWeight="Bold" Margin="0,10,0,0" />
						<RadioButton Margin="0,5,0,2" Content="Original Filename"
						             IsChecked="{Binding Path=NameOption, Converter={StaticResource enumConv}, ConverterParameter=Original}" />
						<RadioButton Margin="0,5,0,2" Content="Numbered Sequentially"
						             IsChecked="{Binding Path=NameOption, Converter={StaticResource enumConv}, ConverterParameter=Numbered}" />
						<RadioButton Margin="0,5,0,2" Content="Custom Template"
						             IsChecked="{Binding Path=NameOption, Converter={StaticResource enumConv}, ConverterParameter=Custom}" />
						<Grid Visibility="{Binding Path=NameOption, Converter={StaticResource enumVis}, ConverterParameter=Custom}">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							<TextBlock Text="Custom Template Settings:" Grid.ColumnSpan="2" FontWeight="Bold" Margin="0,10,0,0" />
							<TextBlock Grid.Row="1" Text="Template:" Margin="0,0,10,0" VerticalAlignment="Center" />
							<TextBox Grid.Row="1" Grid.Column="1" Margin="3"
							         Text="{Binding OutputTemplate, UpdateSourceTrigger=PropertyChanged}" />
							<TextBlock Grid.Row="2" Text="Example:" Margin="0,0,10,0" VerticalAlignment="Center" />
							<TextBlock Grid.Row="2" Grid.Column="1" Margin="3" Text="{Binding OutputTemplateExample}"
							           VerticalAlignment="Center" />
							<TextBlock Grid.Row="3" Grid.ColumnSpan="2" HorizontalAlignment="Center"
							           Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" TextAlignment="Center">
								Replacement Codes: <LineBreak />
								{o} - Original Filename <LineBreak />
								{w} - Output Width <LineBreak />
								{h} - Output Height
							</TextBlock>
						</Grid>
					</StackPanel>
				</Grid>
			</StackPanel>

			<!-- #endregion -->

			<!-- Start Button -->
			<Button Grid.Row="3" HorizontalAlignment="Center" Margin="10,0" Cursor="Hand" IsEnabled="{Binding OutputSet}">
				<StackPanel Orientation="Horizontal">
					<Label Content="Start Processing" FontSize="20" Margin="0,0,10,0" FontFamily="Segoe UI Light" />
					<Image Source="Images/32/image-transition.png" VerticalAlignment="Center" />
				</StackPanel>
			</Button>
		</Grid>

		<!-- #endregion -->
	</Grid>
</Window>